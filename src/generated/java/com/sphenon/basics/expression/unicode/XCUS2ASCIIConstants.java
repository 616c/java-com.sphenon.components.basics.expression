/* Generated By:JavaCC: Do not edit this line. XCUS2ASCIIConstants.java */
package com.sphenon.basics.expression.unicode;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface XCUS2ASCIIConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int ESCAPE = 1;
  /** RegularExpression Id. */
  int LNCONT = 2;
  /** RegularExpression Id. */
  int LNCONTPLUS = 3;
  /** RegularExpression Id. */
  int CONT = 4;
  /** RegularExpression Id. */
  int CONTPLUS = 5;
  /** RegularExpression Id. */
  int LNINDT = 6;
  /** RegularExpression Id. */
  int SEPARATOR = 7;
  /** RegularExpression Id. */
  int UNICODEESC = 8;
  /** RegularExpression Id. */
  int WS = 9;
  /** RegularExpression Id. */
  int LN = 10;
  /** RegularExpression Id. */
  int SELECT = 11;
  /** RegularExpression Id. */
  int REQUIRE = 12;
  /** RegularExpression Id. */
  int SCRIPT = 13;
  /** RegularExpression Id. */
  int PREPROCESS = 14;
  /** RegularExpression Id. */
  int CMTBEGIN = 15;
  /** RegularExpression Id. */
  int CMTEND = 16;
  /** RegularExpression Id. */
  int EXPRBEGIN = 17;
  /** RegularExpression Id. */
  int EXPREND = 18;
  /** RegularExpression Id. */
  int OORL = 19;
  /** RegularExpression Id. */
  int BASH = 20;
  /** RegularExpression Id. */
  int SHELL = 21;
  /** RegularExpression Id. */
  int SCOPE = 22;
  /** RegularExpression Id. */
  int JAVASCRIPT = 23;
  /** RegularExpression Id. */
  int OPERATION = 24;
  /** RegularExpression Id. */
  int PROGRAM = 25;
  /** RegularExpression Id. */
  int UNICODE = 26;
  /** RegularExpression Id. */
  int PROCESS = 27;
  /** RegularExpression Id. */
  int EVALUATE = 28;
  /** RegularExpression Id. */
  int CONTROL = 29;
  /** RegularExpression Id. */
  int CHECK = 30;
  /** RegularExpression Id. */
  int LOG = 31;
  /** RegularExpression Id. */
  int PLACEHOLDER = 32;
  /** RegularExpression Id. */
  int OCP = 33;
  /** RegularExpression Id. */
  int MULTIITER = 34;
  /** RegularExpression Id. */
  int MULTITIMES = 35;
  /** RegularExpression Id. */
  int EQUALS = 36;
  /** RegularExpression Id. */
  int RECODEBS = 37;
  /** RegularExpression Id. */
  int RECODE = 38;
  /** RegularExpression Id. */
  int ENCODING = 39;
  /** RegularExpression Id. */
  int RECODING = 40;
  /** RegularExpression Id. */
  int DECORATE = 41;
  /** RegularExpression Id. */
  int JOIN = 42;
  /** RegularExpression Id. */
  int EJOIN = 43;
  /** RegularExpression Id. */
  int CONFIG = 44;
  /** RegularExpression Id. */
  int ENVIRONMENT = 45;
  /** RegularExpression Id. */
  int OR = 46;
  /** RegularExpression Id. */
  int AND = 47;
  /** RegularExpression Id. */
  int ULT = 48;
  /** RegularExpression Id. */
  int UGT = 49;
  /** RegularExpression Id. */
  int UNULLSTRING = 50;
  /** RegularExpression Id. */
  int UEMPTYSTRING = 51;
  /** RegularExpression Id. */
  int UNULL = 52;
  /** RegularExpression Id. */
  int UTRUE = 53;
  /** RegularExpression Id. */
  int UFALSE = 54;
  /** RegularExpression Id. */
  int UQUOTE = 55;
  /** RegularExpression Id. */
  int FORMATDATE = 56;
  /** RegularExpression Id. */
  int FORMAT = 57;
  /** RegularExpression Id. */
  int TIME = 58;
  /** RegularExpression Id. */
  int DATETIME = 59;
  /** RegularExpression Id. */
  int DATE = 60;
  /** RegularExpression Id. */
  int SIZE = 61;
  /** RegularExpression Id. */
  int AVERAGE = 62;
  /** RegularExpression Id. */
  int PRODUCT = 63;
  /** RegularExpression Id. */
  int SUM = 64;
  /** RegularExpression Id. */
  int MINIMUM = 65;
  /** RegularExpression Id. */
  int MAXIMUM = 66;
  /** RegularExpression Id. */
  int EXPRB = 67;
  /** RegularExpression Id. */
  int EXECUTE = 68;
  /** RegularExpression Id. */
  int BEGINPROC = 69;
  /** RegularExpression Id. */
  int ENDPROC = 70;
  /** RegularExpression Id. */
  int BEGINBLK = 71;
  /** RegularExpression Id. */
  int ENDBLK = 72;
  /** RegularExpression Id. */
  int CMTB = 73;
  /** RegularExpression Id. */
  int CMTE = 74;
  /** RegularExpression Id. */
  int BTICK = 75;
  /** RegularExpression Id. */
  int BACKSL = 76;
  /** RegularExpression Id. */
  int NEWLINE = 77;
  /** RegularExpression Id. */
  int ANY = 78;
  /** RegularExpression Id. */
  int OOPBRK = 79;
  /** RegularExpression Id. */
  int OCLBRK = 80;
  /** RegularExpression Id. */
  int OLT = 81;
  /** RegularExpression Id. */
  int OGT = 82;
  /** RegularExpression Id. */
  int OID = 83;
  /** RegularExpression Id. */
  int OIDENTIFIER = 84;
  /** RegularExpression Id. */
  int ODELDQB = 85;
  /** RegularExpression Id. */
  int ODELSQB = 86;
  /** RegularExpression Id. */
  int ODELBCB = 87;
  /** RegularExpression Id. */
  int ODELPAB = 88;
  /** RegularExpression Id. */
  int ODELDQE = 89;
  /** RegularExpression Id. */
  int ODELSQE = 90;
  /** RegularExpression Id. */
  int ODELBCE = 91;
  /** RegularExpression Id. */
  int ODELPAE = 92;
  /** RegularExpression Id. */
  int OXPATH = 93;
  /** RegularExpression Id. */
  int OPROPERTY = 94;
  /** RegularExpression Id. */
  int OXMODEL = 95;
  /** RegularExpression Id. */
  int OFILE = 96;
  /** RegularExpression Id. */
  int OSQL = 97;
  /** RegularExpression Id. */
  int OANY = 98;
  /** RegularExpression Id. */
  int ELT = 99;
  /** RegularExpression Id. */
  int EGT = 100;
  /** RegularExpression Id. */
  int EOPBRK = 101;
  /** RegularExpression Id. */
  int ECLBRK = 102;
  /** RegularExpression Id. */
  int EXPRE = 103;
  /** RegularExpression Id. */
  int EQUOTE = 104;
  /** RegularExpression Id. */
  int ANYEXPR = 105;

  /** Lexical state. */
  int DEFAULT = 0;
  /** Lexical state. */
  int IN_OORL = 1;
  /** Lexical state. */
  int IN_ODELDQ = 2;
  /** Lexical state. */
  int IN_ODELSQ = 3;
  /** Lexical state. */
  int IN_ODELBC = 4;
  /** Lexical state. */
  int IN_ODELPA = 5;
  /** Lexical state. */
  int IN_EXPR = 6;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "<ESCAPE>",
    "\"\\u2026\\n\"",
    "\"\\u2026+\\n\"",
    "\"\\u2026\"",
    "\"\\u2026+\"",
    "\"\\u22ee\"",
    "\"\\u25c8\"",
    "<UNICODEESC>",
    "<WS>",
    "\"\\n\"",
    "<SELECT>",
    "<REQUIRE>",
    "<SCRIPT>",
    "<PREPROCESS>",
    "\"\\u22b0\"",
    "\"\\u22b1\"",
    "\"\\u25c2\"",
    "\"\\u25b8\"",
    "\"\\u2016\"",
    "\"\\u24b7\"",
    "\"\\u24c8\"",
    "\"\\u24e2\"",
    "\"\\u24bf\"",
    "\"\\u24c4\"",
    "\"\\u24c5\"",
    "\"\\u24ca\"",
    "\"\\u24df\"",
    "\"\\u24d4\"",
    "\"\\u24d2\"",
    "\"\\u2753\"",
    "\"\\u2399\"",
    "\"\\u2386\"",
    "\"\\u2042\"",
    "\"\\u274e\"",
    "\"\\u274c\"",
    "\"\\u2261\"",
    "\"\\u2318\\u2318(\"",
    "\"\\u2318(\"",
    "\"\\u2318.\"",
    "\"\\u2318\"",
    "\"\\u2698(\"",
    "\"\\u2919\"",
    "\"\\u291a\"",
    "\"\\u26a1\"",
    "\"\\u267c(\"",
    "\"\\u2228\"",
    "\"\\u2227\"",
    "\"\\u227a\"",
    "\"\\u227b\"",
    "\"\\u2400\\u2057\"",
    "\"\\u2057\"",
    "\"\\u2400\"",
    "\"\\u2714\"",
    "\"\\u2718\"",
    "\"\\u02ee\"",
    "\"\\u231a(\"",
    "\"\\u233e(\"",
    "\"\\u231a\"",
    "<DATETIME>",
    "<DATE>",
    "\"\\u2317(\"",
    "\"\\u2300(\"",
    "\"\\u220f(\"",
    "\"\\u2211(\"",
    "\"\\u2913(\"",
    "\"\\u2912(\"",
    "\"\\u27e6\"",
    "\"\\u203c\"",
    "\"\\u228f\"",
    "\"\\u2290\"",
    "\"\\u2770\"",
    "\"\\u2771\"",
    "\"/*\"",
    "\"*/\"",
    "\"`\"",
    "\"\\\\\"",
    "\"\\u23ce\"",
    "<ANY>",
    "\"[\"",
    "\"]\"",
    "\"<\"",
    "\">\"",
    "<OID>",
    "<OIDENTIFIER>",
    "\"\\\"\"",
    "\"\\\'\"",
    "\"{\"",
    "\"\\u00a7\"",
    "\"\\\"\"",
    "\"\\\'\"",
    "\"}\"",
    "\"\\u00a7\"",
    "\"\\u24cd\"",
    "\"\\u24c5\"",
    "\"\\u2726\"",
    "\"\\u24bb\"",
    "\"\\u24c8\"",
    "<OANY>",
    "\"<\"",
    "\">\"",
    "\"[\"",
    "\"]\"",
    "\"\\u27e7\"",
    "\"\\u02ee\"",
    "<ANYEXPR>",
  };

}
