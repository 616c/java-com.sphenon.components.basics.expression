/* Generated By:JavaCC: Do not edit this line. ExpressionParserConstants.java */
package com.sphenon.basics.expression.parsed;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface ExpressionParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int BOOLEAN = 1;
  /** RegularExpression Id. */
  int IDENTIFIER = 2;
  /** RegularExpression Id. */
  int STRING_LITERAL_1 = 3;
  /** RegularExpression Id. */
  int STRING_LITERAL_2 = 4;
  /** RegularExpression Id. */
  int NUMBER = 5;
  /** RegularExpression Id. */
  int AND = 6;
  /** RegularExpression Id. */
  int OR = 7;
  /** RegularExpression Id. */
  int OP = 8;
  /** RegularExpression Id. */
  int CL = 9;
  /** RegularExpression Id. */
  int DOLLAR = 10;
  /** RegularExpression Id. */
  int OPBRC = 11;
  /** RegularExpression Id. */
  int CLBRC = 12;
  /** RegularExpression Id. */
  int OPBRK = 13;
  /** RegularExpression Id. */
  int CLBRK = 14;
  /** RegularExpression Id. */
  int LT = 15;
  /** RegularExpression Id. */
  int GT = 16;
  /** RegularExpression Id. */
  int LTE = 17;
  /** RegularExpression Id. */
  int GTE = 18;
  /** RegularExpression Id. */
  int OPQ = 19;
  /** RegularExpression Id. */
  int CLQ = 20;
  /** RegularExpression Id. */
  int ELL = 21;
  /** RegularExpression Id. */
  int EQ = 22;
  /** RegularExpression Id. */
  int NEQ = 23;
  /** RegularExpression Id. */
  int RE = 24;
  /** RegularExpression Id. */
  int NRE = 25;
  /** RegularExpression Id. */
  int ISA = 26;
  /** RegularExpression Id. */
  int NISA = 27;
  /** RegularExpression Id. */
  int EQUAL = 28;
  /** RegularExpression Id. */
  int COLON = 29;
  /** RegularExpression Id. */
  int COMMA = 30;
  /** RegularExpression Id. */
  int DOT = 31;
  /** RegularExpression Id. */
  int STAR = 32;
  /** RegularExpression Id. */
  int PLUS = 33;
  /** RegularExpression Id. */
  int TILDE = 34;
  /** RegularExpression Id. */
  int NOT = 35;
  /** RegularExpression Id. */
  int WS = 36;
  /** RegularExpression Id. */
  int ANY = 37;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "<BOOLEAN>",
    "<IDENTIFIER>",
    "<STRING_LITERAL_1>",
    "<STRING_LITERAL_2>",
    "<NUMBER>",
    "<AND>",
    "<OR>",
    "\"(\"",
    "\")\"",
    "\"$\"",
    "\"{\"",
    "\"}\"",
    "\"[\"",
    "\"]\"",
    "\"<\"",
    "\">\"",
    "<LTE>",
    "<GTE>",
    "\"\\u00ab\"",
    "\"\\u00bb\"",
    "<ELL>",
    "\"==\"",
    "<NEQ>",
    "\"=~\"",
    "\"!~\"",
    "\"=|>\"",
    "\"!|>\"",
    "\"=\"",
    "\":\"",
    "\",\"",
    "\".\"",
    "\"*\"",
    "\"+\"",
    "\"~\"",
    "\"!\"",
    "<WS>",
    "<ANY>",
  };

}
